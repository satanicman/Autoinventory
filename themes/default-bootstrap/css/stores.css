/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
/***********************************************************
					Stores Page Styles
************************************************************/
#stores #map {
  width: 100%;
  height: 447px;
  margin-bottom: 26px;
}
#stores input#addressInput {
  display: inline-block;
  width: 269px;
}
#stores .address-input {
  float: left;
  margin-right: 19px;
}
@media (max-width: 767px) {
  #stores .address-input {
    width: 100%;
    margin: 0 0 20px 0;
  }
}
#stores .address-input label {
  margin-right: 5px;
}
#stores .radius-input {
  float: left;
  line-height: 23px;
  margin-right: 20px;
}
#stores .radius-input label,
#stores .radius-input .selector {
  float: left;
}
#stores .radius-input label {
  margin-right: 10px;
}
#stores .radius-input #radiusSelect {
  width: 78px;
}
#stores .store-content {
  padding-bottom: 30px;
}
#stores .store-content-select .selector {
  visibility: hidden;
  display: none;
}
#stores .store-content-select.active {
  padding-top: 30px;
  margin-bottom: 30px;
  border-top: 1px solid #d6d4d4;
}
#stores .store-content-select.active .selector {
  visibility: visible;
  display: block;
}
#stores .store-title {
  margin-bottom: 16px;
}
#stores label {
  font-weight: normal;
  color: #0f2247;
}
#stores #stores_loader {
  display: none;
  margin-left: 5px;
}
#stores #locationSelect {
  max-width: 356px;
  visibility: hidden;
}
#stores #stores-table {
  display: none;
}
#stores #stores-table tbody td {
  padding: 20px;
}
#stores #stores-table tbody td.num {
  background: #fbfbfb;
  width: 46px;
}
#stores #stores-table tbody td.name span {
  padding-left: 15px;
}
@media (max-width: 767px) {
  #stores #stores-table tbody td.name img {
    display: none;
  }
}

.store-image img {
  width: 100%;
  min-width: 100px;
}

/*# sourceMappingURL=stores.css.map */
